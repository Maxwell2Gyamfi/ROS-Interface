;; Auto-generated. Do not edit!


(when (boundp 'iiwa_msgs::MoveAlongSplineGoal)
  (if (not (find-package "IIWA_MSGS"))
    (make-package "IIWA_MSGS"))
  (shadow 'MoveAlongSplineGoal (find-package "IIWA_MSGS")))
(unless (find-package "IIWA_MSGS::MOVEALONGSPLINEGOAL")
  (make-package "IIWA_MSGS::MOVEALONGSPLINEGOAL"))

(in-package "ROS")
;;//! \htmlinclude MoveAlongSplineGoal.msg.html


(defclass iiwa_msgs::MoveAlongSplineGoal
  :super ros::object
  :slots (_spline ))

(defmethod iiwa_msgs::MoveAlongSplineGoal
  (:init
   (&key
    ((:spline __spline) (instance iiwa_msgs::Spline :init))
    )
   (send-super :init)
   (setq _spline __spline)
   self)
  (:spline
   (&rest __spline)
   (if (keywordp (car __spline))
       (send* _spline __spline)
     (progn
       (if __spline (setq _spline (car __spline)))
       _spline)))
  (:serialization-length
   ()
   (+
    ;; iiwa_msgs/Spline _spline
    (send _spline :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; iiwa_msgs/Spline _spline
       (send _spline :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; iiwa_msgs/Spline _spline
     (send _spline :deserialize buf ptr-) (incf ptr- (send _spline :serialization-length))
   ;;
   self)
  )

(setf (get iiwa_msgs::MoveAlongSplineGoal :md5sum-) "e8dcbe6f289dcd0d4eb11721725f5ca8")
(setf (get iiwa_msgs::MoveAlongSplineGoal :datatype-) "iiwa_msgs/MoveAlongSplineGoal")
(setf (get iiwa_msgs::MoveAlongSplineGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal
Spline spline


================================================================================
MSG: iiwa_msgs/Spline
# The describes a motion along a spline

SplineSegment[] segments
================================================================================
MSG: iiwa_msgs/SplineSegment
# This message describes a segment of a spline path

int32 SPL = 0
int32 LIN =  1
int32 CIRC = 2

# The type of the spline segment
int32 type

# The endpoint of the current segment
CartesianPose point

# Auxiliary point. Only used for circular segments
CartesianPose point_aux
================================================================================
MSG: iiwa_msgs/CartesianPose
# Target Pose including redundancy information.
geometry_msgs/PoseStamped poseStamped

# If you have issues with the robot not executing the motion copy this value from the Cartesian Position Tab of the
# robot SmartPad. Set both parameters to -1 to disable them.
RedundancyInformation redundancy

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: iiwa_msgs/RedundancyInformation
# E1 parameter
# Specifies Angle of the elbow joint.
float64 e1

# Status parameter
#   Bit 0: 1 - The robot is working above its head
#          0 - The robot is working in the ground area
#   Bit 1: 1 - Angle A4 < 0°
#          0 - Angle A4 >= 0°
#   Bit 2: 1 - Angle A6 <= 0
#          0 - Angle A6 > 0
int32 status

# Turn parameter
# According to Sunrise handbook this is not used for the iiwa.
int32 turn

")



(provide :iiwa_msgs/MoveAlongSplineGoal "e8dcbe6f289dcd0d4eb11721725f5ca8")


