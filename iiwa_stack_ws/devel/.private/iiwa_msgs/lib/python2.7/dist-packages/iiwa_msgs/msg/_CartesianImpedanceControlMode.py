# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from iiwa_msgs/CartesianImpedanceControlMode.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import iiwa_msgs.msg

class CartesianImpedanceControlMode(genpy.Message):
  _md5sum = "7c03442e16efac806b59fb2795f102eb"
  _type = "iiwa_msgs/CartesianImpedanceControlMode"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """
# Stiffness values [x, y, z, a, b, c] for the cartesian impedance, x, y, z in [N/m], a, b, c in [Nm/rad]. 
# Precondition: 0.0 <= x, y, z <= 5000.0 and 0.0 <= a, b, c <= 300.0. 
CartesianQuantity cartesian_stiffness

# Dimensionless damping values for the cartesian impedance control, for all degrees of freedom : [x, y, z, a, b, c].
# Precondition: 0.1 <= x, y, z, a, b, c <= 1.0. 
CartesianQuantity cartesian_damping

# The stiffness value for null space [Nm/rad]. 
# Precondition: 0.0 <= value. 
float64 nullspace_stiffness

# The damping parameter for null space [Nm*s/rad]. 
# Precondition: value >= 0.3 and value <= 1.0. - A good damping value is 0.7. 
float64 nullspace_damping
================================================================================
MSG: iiwa_msgs/CartesianQuantity
float32 x
float32 y
float32 z
float32 a
float32 b
float32 c"""
  __slots__ = ['cartesian_stiffness','cartesian_damping','nullspace_stiffness','nullspace_damping']
  _slot_types = ['iiwa_msgs/CartesianQuantity','iiwa_msgs/CartesianQuantity','float64','float64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       cartesian_stiffness,cartesian_damping,nullspace_stiffness,nullspace_damping

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(CartesianImpedanceControlMode, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.cartesian_stiffness is None:
        self.cartesian_stiffness = iiwa_msgs.msg.CartesianQuantity()
      if self.cartesian_damping is None:
        self.cartesian_damping = iiwa_msgs.msg.CartesianQuantity()
      if self.nullspace_stiffness is None:
        self.nullspace_stiffness = 0.
      if self.nullspace_damping is None:
        self.nullspace_damping = 0.
    else:
      self.cartesian_stiffness = iiwa_msgs.msg.CartesianQuantity()
      self.cartesian_damping = iiwa_msgs.msg.CartesianQuantity()
      self.nullspace_stiffness = 0.
      self.nullspace_damping = 0.

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_12f2d().pack(_x.cartesian_stiffness.x, _x.cartesian_stiffness.y, _x.cartesian_stiffness.z, _x.cartesian_stiffness.a, _x.cartesian_stiffness.b, _x.cartesian_stiffness.c, _x.cartesian_damping.x, _x.cartesian_damping.y, _x.cartesian_damping.z, _x.cartesian_damping.a, _x.cartesian_damping.b, _x.cartesian_damping.c, _x.nullspace_stiffness, _x.nullspace_damping))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.cartesian_stiffness is None:
        self.cartesian_stiffness = iiwa_msgs.msg.CartesianQuantity()
      if self.cartesian_damping is None:
        self.cartesian_damping = iiwa_msgs.msg.CartesianQuantity()
      end = 0
      _x = self
      start = end
      end += 64
      (_x.cartesian_stiffness.x, _x.cartesian_stiffness.y, _x.cartesian_stiffness.z, _x.cartesian_stiffness.a, _x.cartesian_stiffness.b, _x.cartesian_stiffness.c, _x.cartesian_damping.x, _x.cartesian_damping.y, _x.cartesian_damping.z, _x.cartesian_damping.a, _x.cartesian_damping.b, _x.cartesian_damping.c, _x.nullspace_stiffness, _x.nullspace_damping,) = _get_struct_12f2d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_12f2d().pack(_x.cartesian_stiffness.x, _x.cartesian_stiffness.y, _x.cartesian_stiffness.z, _x.cartesian_stiffness.a, _x.cartesian_stiffness.b, _x.cartesian_stiffness.c, _x.cartesian_damping.x, _x.cartesian_damping.y, _x.cartesian_damping.z, _x.cartesian_damping.a, _x.cartesian_damping.b, _x.cartesian_damping.c, _x.nullspace_stiffness, _x.nullspace_damping))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.cartesian_stiffness is None:
        self.cartesian_stiffness = iiwa_msgs.msg.CartesianQuantity()
      if self.cartesian_damping is None:
        self.cartesian_damping = iiwa_msgs.msg.CartesianQuantity()
      end = 0
      _x = self
      start = end
      end += 64
      (_x.cartesian_stiffness.x, _x.cartesian_stiffness.y, _x.cartesian_stiffness.z, _x.cartesian_stiffness.a, _x.cartesian_stiffness.b, _x.cartesian_stiffness.c, _x.cartesian_damping.x, _x.cartesian_damping.y, _x.cartesian_damping.z, _x.cartesian_damping.a, _x.cartesian_damping.b, _x.cartesian_damping.c, _x.nullspace_stiffness, _x.nullspace_damping,) = _get_struct_12f2d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_12f2d = None
def _get_struct_12f2d():
    global _struct_12f2d
    if _struct_12f2d is None:
        _struct_12f2d = struct.Struct("<12f2d")
    return _struct_12f2d
